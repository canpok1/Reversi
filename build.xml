<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="execute_all" name="Reversi">
    <!-- システムの環境変数 -->
    <property environment="env"/>
    <property name="ANT_HOME" value="${env.ANT_HOME}"/>
    <property name="FINDBUGS_HOME" value="${env.FINDBUGS_HOME}"/>
    <property name="JACOCO_HOME" value="${env.JACOCO_HOME}"/>

    <property name="debuglevel" value="source,lines,vars"/>

    <!-- コンパイルの設定 -->
    <property name="javac_target" value="1.6"/>
    <property name="javac_source" value="1.6"/>
    <property name="bootclasspath" value="jdk1.6.0/lib/rt.jar" />

    <!-- 各種ファイルのパス -->
    <property name="Reversi.location" value="Reversi" />
    <property name="Reversi.src_dir" value="${Reversi.location}/src" />
    <property name="Reversi.class_dir" value="${Reversi.location}/bin" />

    <property name="Test.location" value="ReversiTest" />
    <property name="Test.src_dir" value="${Test.location}/src" />
    <property name="Test.class_dir" value="${Test.location}/bin" />

    <property name="jar_dest_dir" value="Reversi" />

    <property name="report_dir" value="report"/>
    <property name="javadoc_dest_dir" value="${report_dir}/javadoc" />
    <property name="junit.output.dir" value="${report_dir}/junit"/>
    <property name="findbugs.output" value="${report_dir}/findbugs.xml" />

    <!-- クラスパス -->
    <path id="Reversi.classpath">
        <pathelement location="${Reversi.class_dir}"/>
        <pathelement location="${Reversi.location}/lib/core.jar"/>
    </path>
    <path id="ReversiTest.classpath">
        <path refid="Reversi.classpath"/>
        <pathelement location="${Test.location}/bin"/>
        <pathelement location="${Test.location}/lib/junit-4.10.jar"/>
    </path>

    <!-- クラスファイルの出力先を生成 -->
    <target name="init_Reversi">
        <mkdir dir="${Reversi.class_dir}"/>
        <copy includeemptydirs="false" todir="${Reversi.class_dir}">
            <fileset dir="${Reversi.src_dir}">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="init_Test">
        <mkdir dir="${Test.class_dir}"/>
        <copy includeemptydirs="false" todir="${Test.class_dir}">
            <fileset dir="${Test.src_dir}">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <!-- クラスファイルを削除 -->
    <target name="clean_Reversi">
        <delete dir="${Reversi.class_dir}"/>
    </target>
    <target name="clean_Test">
        <delete dir="${Test.class_dir}"/>
    </target>
    <target name="clean_Report">
        <delete dir="${report_dir}"/>
    </target>
    <target name="clean_all" depends="clean_Reversi,clean_Test,clean_Report" />

    <!-- リバーシとテストのビルド -->
    <target name="build" depends="build_Reversi,build_Test"/>
    <!-- リバーシのみのビルド -->
    <target name="build_Reversi" depends="init_Reversi">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac
            debug="true"
            debuglevel="${debuglevel}"
            destdir="${Reversi.class_dir}"
            source="${javac_source}"
            target="${javac_target}"
            bootclasspath="${bootclasspath}"
            encoding="UTF-8" >
            <src path="${Reversi.src_dir}"/>
            <classpath refid="Reversi.classpath"/>
        </javac>
    </target>
    <!-- テストのみのビルド -->
    <target name="build_Test" depends="init_Test">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac
            debug="true"
            debuglevel="${debuglevel}"
            destdir="${Test.class_dir}"
            source="${javac_source}"
            target="${javac_target}"
            bootclasspath="${bootclasspath}"
            encoding="UTF-8" >
            <src path="${Test.src_dir}"/>
            <classpath refid="ReversiTest.classpath"/>
        </javac>
    </target>

    <!-- 実行可能なjarを生成 -->
    <target name="create_jar">
        <delete dir="tmp"/>
        <mkdir dir="tmp"/>
        <jar basedir="${Reversi.class_dir}" jarfile="tmp/${jar_dest_dir}/Reversi_GUI.jar">
            <manifest>
                <attribute name="Main-Class" value="main.GuiMain"/>
                <attribute name="Class-Path" value=". Reversi_lib/core.jar"/>
            </manifest>
        </jar>
        <copy file="${Reversi.location}/lib/core.jar" todir="tmp/${jar_dest_dir}/Reversi_lib"/>
        <zip destfile="${report_dir}/${jar_dest_dir}.zip"
            basedir="tmp"
            update="true"
        />
        <delete dir="tmp"/>
    </target>

    <!-- テストを実行 -->
    <target name="test">
        <path id="jacoco">
            <fileset dir="${JACOCO_HOME}/lib">
                <include name="*.jar"/>
            </fileset>
        </path>
        <taskdef classpathref="jacoco" resource="org/jacoco/ant/antlib.xml"/>
        <mkdir dir="${junit.output.dir}"/>
        <coverage>
            <junit fork="yes" printsummary="withOutAndErr">
                <formatter type="xml"/>
                <test name="ai.minimax.LeafTest" todir="${junit.output.dir}"/>
                <test name="core.BoardTest" todir="${junit.output.dir}"/>
                <test name="core.NextMoveTest" todir="${junit.output.dir}"/>
                <classpath refid="Reversi.classpath"/>
                <classpath refid="ReversiTest.classpath"/>
            </junit>
        </coverage>

        <move file="jacoco.exec" todir="${report_dir}" />

        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>

    <!-- ドキュメントを生成 -->
    <target name="javadoc">
        <javadoc sourcepath="${Reversi.src_dir}"
            encoding="UTF-8"
            destdir="${javadoc_dest_dir}"
            docencoding="UTF-8"
            charset="UTF-8" />
    </target>

    <!-- 静的解析を実行 -->
    <target name="findbugs">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" />
        <findbugs home="${FINDBUGS_HOME}"
                  output="xml:withMessages"
                  outputFile="${findbugs.output}">
            <sourcePath path="${Reversi.src_dir}" />
            <class location="${Reversi.class_dir}" />
        </findbugs>
    </target>

    <target name="execute_all" depends="build,test,create_jar,javadoc,findbugs" />
</project>
