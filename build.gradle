apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'findbugs'
apply plugin: 'application'
apply plugin: 'checkstyle'

repositories {
    mavenCentral()
}

// 文字コード設定
def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava, javadoc]*.options*.encoding = defaultEncoding

dependencies {
    compile fileTree(dir:"Reversi/lib", include: "*.jar")
    testCompile fileTree(dir:"Reversi/lib", include: "*.jar")
    testCompile 'org.jmockit:jmockit:1.12'
    testCompile 'org.jmockit:jmockit-coverage:1.12'
    testCompile 'junit:junit:4.10'
}

// ディレクトリ構成
sourceSets {
    main {
        java {
            srcDir 'Reversi/src'
        }
    }
    test {
        java {
            srcDir 'ReversiTest/src'
        }
    }
}

// Gradleラッパーのインストールタスク
task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

test {
    // テストが二重実行される問題の対策
    exclude '**/*$*'
}

// Findbugsの設定
[findbugsMain, findbugsTest]*.effort = "max"
[findbugsMain, findbugsTest]*.reportLevel = "high"
[findbugsMain, findbugsTest]*.ignoreFailures = true
[findbugsMain, findbugsTest]*.reports {
    xml.enabled = true
    html.enabled = false
}

// Checkstyle警告が出ても続行
[checkstyleMain, checkstyleTest]*.ignoreFailures = true

// 生成するEclipseプロジェクトにフォーマッターの設定追加
eclipse.jdt.file {
    withProperties { properties ->
        def formatter = new XmlSlurper().parse('config/EclipseFormatter.xml')
        formatter.profile.setting.each {
            properties.put(it.@id as String, it.@value as String)
        }
    }
}

// Mainクラス設定
mainClassName = "main.GuiMain"

defaultTasks 'clean', 'javadoc', 'build', 'distZip'
